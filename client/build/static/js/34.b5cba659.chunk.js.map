{"version":3,"sources":["../node_modules/@material-ui/core/esm/utils/unstable_useId.js","app/views/material-kit/tables/SimpleTable.jsx","app/views/material-kit/tables/PaginationTable.jsx","app/views/material-kit/tables/AppTable.jsx"],"names":["__webpack_require__","d","__webpack_exports__","useId","react__WEBPACK_IMPORTED_MODULE_0__","idOverride","_React$useState","defaultId","setDefaultId","id","concat","Math","round","random","subscribarList","name","date","amount","status","company","SimpleTable","react_default","a","createElement","className","Table","style","whiteSpace","TableHead","TableRow","TableCell","TableBody","map","subscriber","index","key","align","IconButton","Icon","color","PaginationTable","React","useState","_React$useState2","Object","slicedToArray","rowsPerPage","setRowsPerPage","_React$useState3","_React$useState4","page","setPage","slice","TablePagination","rowsPerPageOptions","component","count","length","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","event","newPage","onChangeRowsPerPage","target","value","AppTable","matx","routeSegments","path","title","tables_SimpleTable","tables_PaginationTable"],"mappings":"4FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAKe,SAAAG,EAAAE,GACf,IAAAC,EAAwBF,EAAA,SAAcC,GACtCE,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAEAG,EAAAJ,GAAAE,EASA,OAREH,EAAA,UAAe,WACjB,MAAAG,GAIAC,EAAA,OAAAE,OAAAC,KAAAC,MAAA,IAAAD,KAAAE,aAEG,CAAAN,IACHE,sICRMK,EAAiB,CACrB,CACEC,KAAM,WACNC,KAAM,mBACNC,OAAQ,IACRC,OAAQ,QACRC,QAAS,oBAEX,CACEJ,KAAM,cACNC,KAAM,mBACNC,OAAQ,IACRC,OAAQ,OACRC,QAAS,mBAEX,CACEJ,KAAM,iBACNC,KAAM,kBACNC,OAAQ,IACRC,OAAQ,QACRC,QAAS,qBAEX,CACEJ,KAAM,aACNC,KAAM,kBACNC,OAAQ,KACRC,OAAQ,OACRC,QAAS,oBAEX,CACEJ,KAAM,aACNC,KAAM,kBACNC,OAAQ,KACRC,OAAQ,OACRC,QAAS,oBAEX,CACEJ,KAAM,aACNC,KAAM,kBACNC,OAAQ,KACRC,OAAQ,OACRC,QAAS,qBAiDEC,EA7CK,WAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOC,MAAO,CAAEC,WAAY,QAC1BN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,QAArB,QACAH,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,QAArB,WACAH,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,QAArB,cACAH,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,QAArB,UACAH,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,QAArB,UACAH,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,QAArB,YAGJH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACGjB,EAAekB,IAAI,SAACC,EAAYC,GAAb,OAClBb,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUM,IAAKD,GACbb,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,kBAAkBY,MAAM,QAC1CH,EAAWlB,MAEdM,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,kBAAkBY,MAAM,QAC1CH,EAAWd,SAEdE,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,kBAAkBY,MAAM,QAC1CH,EAAWjB,MAEdK,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,mBAClBS,EAAWf,QAEdG,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,mBAArB,IACIS,EAAWhB,QAEfI,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,QACnBH,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,MAAM,SAAZ,qCC9EZzB,EAAiB,CACrB,CACEC,KAAM,WACNC,KAAM,mBACNC,OAAQ,IACRC,OAAQ,QACRC,QAAS,oBAEX,CACEJ,KAAM,cACNC,KAAM,mBACNC,OAAQ,IACRC,OAAQ,OACRC,QAAS,mBAEX,CACEJ,KAAM,cACNC,KAAM,mBACNC,OAAQ,IACRC,OAAQ,OACRC,QAAS,mBAEX,CACEJ,KAAM,iBACNC,KAAM,kBACNC,OAAQ,IACRC,OAAQ,QACRC,QAAS,qBAEX,CACEJ,KAAM,aACNC,KAAM,kBACNC,OAAQ,KACRC,OAAQ,OACRC,QAAS,oBAEX,CACEJ,KAAM,aACNC,KAAM,kBACNC,OAAQ,KACRC,OAAQ,OACRC,QAAS,oBAEX,CACEJ,KAAM,aACNC,KAAM,kBACNC,OAAQ,KACRC,OAAQ,OACRC,QAAS,oBAEX,CACEJ,KAAM,aACNC,KAAM,kBACNC,OAAQ,KACRC,OAAQ,OACRC,QAAS,oBAEX,CACEJ,KAAM,aACNC,KAAM,kBACNC,OAAQ,KACRC,OAAQ,OACRC,QAAS,qBA+EEqB,EA3ES,WACtB,IAAAlC,EAAsCmC,IAAMC,SAAS,GAArDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAtC,EAAA,GAAOwC,EAAPH,EAAA,GAAoBI,EAApBJ,EAAA,GACAK,EAAwBP,IAAMC,SAAS,GAAvCO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAOE,EAAPD,EAAA,GAAaE,EAAbF,EAAA,GAUA,OACE5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOC,MAAO,CAAEC,WAAY,QAC1BN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,QAArB,QACAH,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,QAArB,WACAH,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,QAArB,cACAH,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,QAArB,UACAH,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,QAArB,UACAH,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,QAArB,YAGJH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACGjB,EACEsC,MAAMF,EAAOJ,EAAaI,EAAOJ,EAAcA,GAC/Cd,IAAI,SAACC,EAAYC,GAAb,OACHb,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUM,IAAKD,GACbb,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,kBAAkBY,MAAM,QAC1CH,EAAWlB,MAEdM,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,kBAAkBY,MAAM,QAC1CH,EAAWd,SAEdE,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,kBAAkBY,MAAM,QAC1CH,EAAWjB,MAEdK,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,mBAClBS,EAAWf,QAEdG,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,mBAArB,IACIS,EAAWhB,QAEfI,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWN,UAAU,QACnBH,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,MAAM,SAAZ,gBAQdlB,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CACE7B,UAAU,QACV8B,mBAAoB,CAAC,EAAG,GAAI,IAC5BC,UAAU,MACVC,MAAO1C,EAAe2C,OACtBX,YAAaA,EACbI,KAAMA,EACNQ,oBAAqB,CACnBC,aAAc,iBAEhBC,oBAAqB,CACnBD,aAAc,aAEhBE,aAhEmB,SAACC,EAAOC,GAC/BZ,EAAQY,IAgEJC,oBA7D0B,SAAAF,GAC9Bf,GAAgBe,EAAMG,OAAOC,oBC5DlBC,UAtBE,WACf,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAMC,UAAU,YACdH,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CACEC,cAAe,CACb,CAAEtD,KAAM,WAAYuD,KAAM,aAC1B,CAAEvD,KAAM,aAIdM,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAYG,MAAM,gBAChBlD,EAAAC,EAAAC,cAACiD,EAAD,OAEFnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAYG,MAAM,oBAChBlD,EAAAC,EAAAC,cAACkD,EAAD","file":"static/js/34.b5cba659.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function useId(idOverride) {\n  var _React$useState = React.useState(idOverride),\n      defaultId = _React$useState[0],\n      setDefaultId = _React$useState[1];\n\n  var id = idOverride || defaultId;\n  React.useEffect(function () {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the random value for client-side rendering only.\n      // We can't use it server-side.\n      setDefaultId(\"mui-\".concat(Math.round(Math.random() * 1e5)));\n    }\n  }, [defaultId]);\n  return id;\n}","import React from \"react\";\nimport {\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  IconButton,\n  Icon,\n  TableRow\n} from \"@material-ui/core\";\n\nconst subscribarList = [\n  {\n    name: \"john doe\",\n    date: \"18 january, 2019\",\n    amount: 1000,\n    status: \"close\",\n    company: \"ABC Fintech LTD.\"\n  },\n  {\n    name: \"kessy bryan\",\n    date: \"10 january, 2019\",\n    amount: 9000,\n    status: \"open\",\n    company: \"My Fintech LTD.\"\n  },\n  {\n    name: \"james cassegne\",\n    date: \"8 january, 2019\",\n    amount: 5000,\n    status: \"close\",\n    company: \"Collboy Tech LTD.\"\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\"\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\"\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\"\n  }\n];\n\nconst SimpleTable = () => {\n  return (\n    <div className=\"w-100 overflow-auto\">\n      <Table style={{ whiteSpace: \"pre\" }}>\n        <TableHead>\n          <TableRow>\n            <TableCell className=\"px-0\">Name</TableCell>\n            <TableCell className=\"px-0\">Company</TableCell>\n            <TableCell className=\"px-0\">Start Date</TableCell>\n            <TableCell className=\"px-0\">Status</TableCell>\n            <TableCell className=\"px-0\">Amount</TableCell>\n            <TableCell className=\"px-0\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {subscribarList.map((subscriber, index) => (\n            <TableRow key={index}>\n              <TableCell className=\"px-0 capitalize\" align=\"left\">\n                {subscriber.name}\n              </TableCell>\n              <TableCell className=\"px-0 capitalize\" align=\"left\">\n                {subscriber.company}\n              </TableCell>\n              <TableCell className=\"px-0 capitalize\" align=\"left\">\n                {subscriber.date}\n              </TableCell>\n              <TableCell className=\"px-0 capitalize\">\n                {subscriber.status}\n              </TableCell>\n              <TableCell className=\"px-0 capitalize\">\n                ${subscriber.amount}\n              </TableCell>\n              <TableCell className=\"px-0\">\n                <IconButton>\n                  <Icon color=\"error\">close</Icon>\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nexport default SimpleTable;\n","import React from \"react\";\nimport {\n  IconButton,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Icon,\n  TablePagination\n} from \"@material-ui/core\";\n\nconst subscribarList = [\n  {\n    name: \"john doe\",\n    date: \"18 january, 2019\",\n    amount: 1000,\n    status: \"close\",\n    company: \"ABC Fintech LTD.\"\n  },\n  {\n    name: \"kessy bryan\",\n    date: \"10 january, 2019\",\n    amount: 9000,\n    status: \"open\",\n    company: \"My Fintech LTD.\"\n  },\n  {\n    name: \"kessy bryan\",\n    date: \"10 january, 2019\",\n    amount: 9000,\n    status: \"open\",\n    company: \"My Fintech LTD.\"\n  },\n  {\n    name: \"james cassegne\",\n    date: \"8 january, 2019\",\n    amount: 5000,\n    status: \"close\",\n    company: \"Collboy Tech LTD.\"\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\"\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\"\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\"\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\"\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\"\n  }\n];\n\nconst PaginationTable = () => {\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [page, setPage] = React.useState(0);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n  };\n\n  return (\n    <div className=\"w-100 overflow-auto\">\n      <Table style={{ whiteSpace: \"pre\" }}>\n        <TableHead>\n          <TableRow>\n            <TableCell className=\"px-0\">Name</TableCell>\n            <TableCell className=\"px-0\">Company</TableCell>\n            <TableCell className=\"px-0\">Start Date</TableCell>\n            <TableCell className=\"px-0\">Status</TableCell>\n            <TableCell className=\"px-0\">Amount</TableCell>\n            <TableCell className=\"px-0\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {subscribarList\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((subscriber, index) => (\n              <TableRow key={index}>\n                <TableCell className=\"px-0 capitalize\" align=\"left\">\n                  {subscriber.name}\n                </TableCell>\n                <TableCell className=\"px-0 capitalize\" align=\"left\">\n                  {subscriber.company}\n                </TableCell>\n                <TableCell className=\"px-0 capitalize\" align=\"left\">\n                  {subscriber.date}\n                </TableCell>\n                <TableCell className=\"px-0 capitalize\">\n                  {subscriber.status}\n                </TableCell>\n                <TableCell className=\"px-0 capitalize\">\n                  ${subscriber.amount}\n                </TableCell>\n                <TableCell className=\"px-0\">\n                  <IconButton>\n                    <Icon color=\"error\">close</Icon>\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n\n      <TablePagination\n        className=\"px-16\"\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={subscribarList.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        backIconButtonProps={{\n          \"aria-label\": \"Previous Page\"\n        }}\n        nextIconButtonProps={{\n          \"aria-label\": \"Next Page\"\n        }}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </div>\n  );\n};\n\nexport default PaginationTable;\n","import React from \"react\";\nimport SimpleTable from \"./SimpleTable\";\nimport PaginationTable from \"./PaginationTable\";\nimport { Breadcrumb, SimpleCard } from \"matx\";\n\nconst AppTable = () => {\n  return (\n    <div className=\"m-sm-30\">\n      <div  className=\"mb-sm-30\">\n        <Breadcrumb\n          routeSegments={[\n            { name: \"Material\", path: \"/material\" },\n            { name: \"Table\" }\n          ]}\n        />\n      </div>\n      <SimpleCard title=\"Simple Table\">\n        <SimpleTable />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"Pagination Table\">\n        <PaginationTable />\n      </SimpleCard>\n    </div>\n  );\n};\n\nexport default AppTable;\n"],"sourceRoot":""}