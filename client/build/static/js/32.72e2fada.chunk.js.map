{"version":3,"sources":["app/views/material-kit/forms/SimpleForm.jsx","app/views/forms/BasicForm.jsx"],"names":["SimpleForm","state","username","firstName","email","date","Date","creditCard","mobile","password","confirmPassword","gender","agreement","handleSubmit","event","console","log","handleChange","persist","_this","setState","Object","_home_sudhakar_NewProject_new_admin_stroresbuddy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","name","value","handleDateChange","_this2","this","ValidatorForm","addValidationRule","removeValidationRule","_this$state","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_material_ui_form_validator__WEBPACK_IMPORTED_MODULE_6__","ref","onSubmit","onError","errors","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","container","spacing","item","lg","md","sm","xs","className","label","onChange","type","validators","errorMessages","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_14__","utils","DateFnsUtils","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_15__","margin","id","inputVariant","autoOk","KeyboardButtonProps","aria-label","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","row","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","control","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","color","labelPlacement","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","variant","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","Component","BasicForm","react__WEBPACK_IMPORTED_MODULE_4___default","matx__WEBPACK_IMPORTED_MODULE_5__","routeSegments","path","_material_kit_forms_SimpleForm__WEBPACK_IMPORTED_MODULE_6__"],"mappings":"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","file":"static/js/32.72e2fada.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport {\n  Button,\n  Icon,\n  Grid,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  Checkbox\n} from \"@material-ui/core\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nclass SimpleForm extends Component {\n  state = {\n    username: \"\",\n    firstName: \"\",\n    email: \"\",\n    date: new Date(),\n    creditCard: \"\",\n    mobile: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    gender: \"\",\n    agreement: \"\"\n  };\n\n  componentDidMount() {\n    // custom rule will have name 'isPasswordMatch'\n    ValidatorForm.addValidationRule(\"isPasswordMatch\", value => {\n      if (value !== this.state.password) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    // remove rule when it is not needed\n    ValidatorForm.removeValidationRule(\"isPasswordMatch\");\n  }\n\n  handleSubmit = event => {\n    console.log(\"submitted\");\n    console.log(event);\n  };\n\n  handleChange = event => {\n    event.persist();\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleDateChange = date => {\n    console.log(date);\n\n    this.setState({ date });\n  };\n\n  render() {\n    let {\n      username,\n      firstName,\n      creditCard,\n      mobile,\n      password,\n      confirmPassword,\n      gender,\n      date,\n      email\n    } = this.state;\n    return (\n      <div>\n        <ValidatorForm\n          ref=\"form\"\n          onSubmit={this.handleSubmit}\n          onError={errors => null}\n        >\n          <Grid container spacing={6}>\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n              <input\n                className=\"mb-16 w-100\"\n                label=\"Username (Min length 4, Max length 9)\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"username\"\n                value={username}\n                validators={[\n                  \"required\",\n                  \"minStringLength: 4\",\n                  \"maxStringLength: 9\"\n                ]}\n                errorMessages={[\"this field is required\"]}\n              />\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"First Name\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"firstName\"\n                value={firstName}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n              />\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"Email\"\n                onChange={this.handleChange}\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                validators={[\"required\", \"isEmail\"]}\n                errorMessages={[\"this field is required\", \"email is not valid\"]}\n              />\n\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  className=\"mb-16 w-100\"\n                  margin=\"none\"\n                  id=\"mui-pickers-date\"\n                  label=\"Date picker\"\n                  inputVariant=\"standard\"\n                  type=\"text\"\n                  autoOk={true}\n                  value={date}\n                  onChange={this.handleDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"change date\"\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n              <TextValidator\n                className=\"mb-32 w-100\"\n                label=\"Credit Card\"\n                onChange={this.handleChange}\n                type=\"number\"\n                name=\"creditCard\"\n                value={creditCard}\n                validators={[\n                  \"required\",\n                  \"minStringLength:16\",\n                  \"maxStringLength: 16\"\n                ]}\n                errorMessages={[\"this field is required\"]}\n              />\n            </Grid>\n\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"Mobile Nubmer\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"mobile\"\n                value={mobile}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n              />\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"Password\"\n                onChange={this.handleChange}\n                name=\"password\"\n                type=\"password\"\n                value={password}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n              />\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"Confirm Password\"\n                onChange={this.handleChange}\n                name=\"confirmPassword\"\n                type=\"password\"\n                value={confirmPassword}\n                validators={[\"required\", \"isPasswordMatch\"]}\n                errorMessages={[\n                  \"this field is required\",\n                  \"password didn't match\"\n                ]}\n              />\n              <RadioGroup\n                className=\"mb-16\"\n                value={gender}\n                name=\"gender\"\n                onChange={this.handleChange}\n                row\n              >\n                <FormControlLabel\n                  value=\"Male\"\n                  control={<Radio color=\"secondary\" />}\n                  label=\"Male\"\n                  labelPlacement=\"end\"\n                />\n                <FormControlLabel\n                  value=\"Female\"\n                  control={<Radio color=\"secondary\" />}\n                  label=\"Female\"\n                  labelPlacement=\"end\"\n                />\n                <FormControlLabel\n                  value=\"Others\"\n                  control={<Radio color=\"secondary\" />}\n                  label=\"Others\"\n                  labelPlacement=\"end\"\n                />\n              </RadioGroup>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"I have read and agree to the terms of service.\"\n              />\n            </Grid>\n          </Grid>\n          <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n            <Icon>send</Icon>\n            <span className=\"pl-8 capitalize\">Send</span>\n          </Button>\n        </ValidatorForm>\n      </div>\n    );\n  }\n}\n\nexport default SimpleForm;\n","import React, { Component } from \"react\";\nimport { Breadcrumb } from \"matx\";\nimport SimpleForm from \"../material-kit/forms/SimpleForm\";\n\nclass BasicForm extends Component {\n  render() {\n    return (\n      <div className=\"m-sm-30\">\n        <div  className=\"mb-sm-30\">\n          <Breadcrumb\n            routeSegments={[\n              { name: \"Forms\", path: \"/forms\" },\n              { name: \"Basic\" }\n            ]}\n          />\n        </div>\n        <SimpleForm />\n      </div>\n    );\n  }\n}\n\nexport default BasicForm;\n"],"sourceRoot":""}