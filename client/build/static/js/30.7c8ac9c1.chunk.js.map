{"version":3,"sources":["../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","../node_modules/@material-ui/core/esm/colors/purple.js","app/views/material-kit/switch/SijmpleSwitch.jsx","app/views/material-kit/switch/LabelledSwitch.jsx","app/views/material-kit/switch/FormGroupSwitch.jsx","app/views/material-kit/switch/CustomizedSwitch.jsx","app/views/material-kit/switch/PlacingSwitchLabel.jsx","app/views/material-kit/switch/AppSwitch.jsx"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","FormGroup","props","ref","classes","className","_props$row","row","other","Object","root","__webpack_exports__","display","flexDirection","flexWrap","name","_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__","_utils_capitalize__WEBPACK_IMPORTED_MODULE_7__","_internal_SwitchBase__WEBPACK_IMPORTED_MODULE_8__","Switch","_props$color","color","_props$edge","edge","_props$size","size","icon","thumb","start","edgeStart","end","edgeEnd","concat","type","checkedIcon","switchBase","input","checked","disabled","track","theme","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","@media print","colorAdjust","marginLeft","marginRight","top","left","palette","grey","transition","transitions","create","duration","shortest","&$checked","transform","&$disabled","&$checked + $track","opacity","&$disabled + $track","colorPrimary","primary","main","&:hover","backgroundColor","action","hoverOpacity","@media (hover: none)","common","black","white","colorSecondary","secondary","sizeSmall","& $thumb","& $switchBase","boxShadow","shadows","borderRadius","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","SimpleSwitch","_React$useState","React","useState","checkedA","checkedB","_React$useState2","slicedToArray","state","setState","handleChange","event","objectSpread2","defineProperty","target","react_default","a","createElement","onChange","value","inputProps","aria-label","defaultChecked","LabelledSwitch","FormControlLabel","control","label","FormGroupSwitch","gilad","jason","antoine","FormControl","component","FormLabel","FormHelperText","PurpleSwitch","withStyles","purple","IOSSwitch","margin","spacing","& + $track","border","&$focusVisible $thumb","focusVisible","_ref","objectWithoutProperties","assign","focusVisibleClassName","disableRipple","AntSwitch","borderColor","CustomizedSwitch","checkedC","Typography","Grid","container","alignItems","item","PlacingSwitchLabel","setValue","labelPlacement","AppSwitch","matx","routeSegments","path","title","switch_PlacingSwitchLabel"],"mappings":"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","file":"static/js/30.7c8ac9c1.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\"; // @inheritedComponent IconButton\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","var purple = {\n  50: '#f3e5f5',\n  100: '#e1bee7',\n  200: '#ce93d8',\n  300: '#ba68c8',\n  400: '#ab47bc',\n  500: '#9c27b0',\n  600: '#8e24aa',\n  700: '#7b1fa2',\n  800: '#6a1b9a',\n  900: '#4a148c',\n  A100: '#ea80fc',\n  A200: '#e040fb',\n  A400: '#d500f9',\n  A700: '#aa00ff'\n};\nexport default purple;","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\n\nexport default function SimpleSwitch() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <div>\n      <Switch\n        checked={state.checkedA}\n        onChange={handleChange(\"checkedA\")}\n        value=\"checkedA\"\n        inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n      />\n      <Switch\n        checked={state.checkedB}\n        onChange={handleChange(\"checkedB\")}\n        value=\"checkedB\"\n        color=\"primary\"\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n      />\n      <Switch\n        value=\"checkedC\"\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n      />\n      <Switch\n        disabled\n        value=\"checkedD\"\n        inputProps={{ \"aria-label\": \"disabled checkbox\" }}\n      />\n      <Switch\n        disabled\n        checked\n        value=\"checkedE\"\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n      />\n      <Switch\n        defaultChecked\n        value=\"checkedF\"\n        color=\"default\"\n        inputProps={{ \"aria-label\": \"checkbox with default color\" }}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nexport default function LabelledSwitch() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={\n          <Switch\n            checked={state.checkedA}\n            onChange={handleChange(\"checkedA\")}\n            value=\"checkedA\"\n          />\n        }\n        label=\"Secondary\"\n      />\n      <FormControlLabel\n        control={\n          <Switch\n            checked={state.checkedB}\n            onChange={handleChange(\"checkedB\")}\n            value=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Primary\"\n      />\n      <FormControlLabel\n        control={<Switch value=\"checkedC\" />}\n        label=\"Uncontrolled\"\n      />\n      <FormControlLabel\n        disabled\n        control={<Switch value=\"checkedD\" />}\n        label=\"Disabled\"\n      />\n      <FormControlLabel\n        disabled\n        control={<Switch checked value=\"checkedE\" />}\n        label=\"Disabled\"\n      />\n    </FormGroup>\n  );\n}\n","import React from \"react\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Switch from \"@material-ui/core/Switch\";\n\nexport default function FormGroupSwitch() {\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: true\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={state.gilad}\n              onChange={handleChange(\"gilad\")}\n              value=\"gilad\"\n            />\n          }\n          label=\"Gilad Gray\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={state.jason}\n              onChange={handleChange(\"jason\")}\n              value=\"jason\"\n            />\n          }\n          label=\"Jason Killian\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={state.antoine}\n              onChange={handleChange(\"antoine\")}\n              value=\"antoine\"\n            />\n          }\n          label=\"Antoine Llorca\"\n        />\n      </FormGroup>\n      <FormHelperText>Be careful</FormHelperText>\n    </FormControl>\n  );\n}\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { purple } from \"@material-ui/core/colors\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: purple[300],\n    \"&$checked\": {\n      color: purple[500]\n    },\n    \"&$checked + $track\": {\n      backgroundColor: purple[500]\n    }\n  },\n  checked: {},\n  track: {}\n})(Switch);\n\nconst IOSSwitch = withStyles(theme => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1)\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(16px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#52d869\",\n        opacity: 1,\n        border: \"none\"\n      }\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#52d869\",\n      border: \"6px solid #fff\"\n    }\n  },\n  thumb: {\n    width: 24,\n    height: 24\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"])\n  },\n  checked: {},\n  focusVisible: {}\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked\n      }}\n      {...props}\n    />\n  );\n});\n\nconst AntSwitch = withStyles(theme => ({\n  root: {\n    width: 28,\n    height: 16,\n    padding: 0,\n    display: \"flex\"\n  },\n  switchBase: {\n    padding: 2,\n    color: theme.palette.grey[500],\n    \"&$checked\": {\n      transform: \"translateX(12px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main\n      }\n    }\n  },\n  thumb: {\n    width: 12,\n    height: 12,\n    boxShadow: \"none\"\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white\n  },\n  checked: {}\n}))(Switch);\n\nexport default function CustomizedSwitch() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={\n          <PurpleSwitch\n            checked={state.checkedA}\n            onChange={handleChange(\"checkedA\")}\n            value=\"checkedA\"\n          />\n        }\n        label=\"Custom color\"\n      />\n      <FormControlLabel\n        control={\n          <IOSSwitch\n            checked={state.checkedB}\n            onChange={handleChange(\"checkedB\")}\n            value=\"checkedB\"\n          />\n        }\n        label=\"iOS style\"\n      />\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n          <Grid item>Off</Grid>\n          <Grid item>\n            <AntSwitch\n              checked={state.checkedC}\n              onChange={handleChange(\"checkedC\")}\n              value=\"checkedC\"\n            />\n          </Grid>\n          <Grid item>On</Grid>\n        </Grid>\n      </Typography>\n    </FormGroup>\n  );\n}\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nfunction PlacingSwitchLabel() {\n  const [value, setValue] = React.useState(\"female\");\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">labelPlacement</FormLabel>\n      <FormGroup\n        aria-label=\"position\"\n        name=\"position\"\n        value={value}\n        onChange={handleChange}\n        row\n      >\n        <FormControlLabel\n          value=\"top\"\n          control={<Switch color=\"primary\" />}\n          label=\"Top\"\n          labelPlacement=\"top\"\n        />\n        <FormControlLabel\n          value=\"start\"\n          control={<Switch color=\"primary\" />}\n          label=\"Start\"\n          labelPlacement=\"start\"\n        />\n        <FormControlLabel\n          value=\"bottom\"\n          control={<Switch color=\"primary\" />}\n          label=\"Bottom\"\n          labelPlacement=\"bottom\"\n        />\n        <FormControlLabel\n          value=\"end\"\n          control={<Switch color=\"primary\" />}\n          label=\"End\"\n          labelPlacement=\"end\"\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n\nexport default PlacingSwitchLabel;\n","import React from \"react\";\nimport SimpleSwitch from \"./SijmpleSwitch\";\nimport LabelledSwitch from \"./LabelledSwitch\";\nimport FormGroupSwitch from \"./FormGroupSwitch\";\nimport CustomizedSwitch from \"./CustomizedSwitch\";\nimport PlacingSwitchLabel from \"./PlacingSwitchLabel\";\nimport { Breadcrumb, SimpleCard } from \"matx\";\n\nconst AppSwitch = () => {\n  return (\n    <div className=\"m-sm-30\">\n      <div  className=\"mb-sm-30\">\n        <Breadcrumb\n          routeSegments={[\n            { name: \"Material\", path: \"/material\" },\n            { name: \"Switch\" }\n          ]}\n        />\n      </div>\n      <SimpleCard title=\"Simple Switch\">\n        <SimpleSwitch />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"Switch with Label\">\n        <LabelledSwitch />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"Switch with Form Group\">\n        <FormGroupSwitch />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"Customized Switch\">\n        <CustomizedSwitch />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"Switch with Different Label Placement\">\n        <PlacingSwitchLabel />\n      </SimpleCard>\n    </div>\n  );\n};\n\nexport default AppSwitch;\n"],"sourceRoot":""}